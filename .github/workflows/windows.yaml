name: Wails build for windows

on:
  push:
    tags:
      # Match any new tag
      - "vv*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    permissions:
      contents: write
    # needs: create-release
    strategy:
      matrix:
        build:
          - name: "usb_list"
            platform: "windows/amd64"
            os: "windows-latest"

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - run: |
          cd frontend
          pnpm install
          pnpm run build
      - uses: actions/setup-go@v5
        with:
          version: 1.21.8
      - run: |
          go env
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # windows 安装依赖
      - name: install msys2 (windows only)
        if: matrix.build.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          release: false
      - name: set environment variables (windows only)
        if: matrix.build.os == 'windows-latest'
        shell: powershell
        run: |
          $env:Path+=";C:\msys64\ucrt64\bin"
      - name: install dependencies (windows only)
        if: matrix.build.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm --needed mingw-w64-x86_64-gcc mingw-w64-x86_64-libusb mingw-w64-x86_64-pkg-config
          pkg-config --cflags libusb-1.0
          pkg-config --libs libusb-1.0
      # 编译
      - name: Build wails
        if: matrix.build.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          export PATH="/c/Users/runneradmin/go/bin:/c/hostedtoolcache/windows/go/1.21.8/x64/bin:$PATH"
          wails build -s -platform="${{ matrix.build.platform }}" -webview2=download  -ldflags="-extldflags=-static -w -s"
      # 发布 release
      - uses: actions/upload-artifact@v3
        with:
          name: Wails Build ${{runner.os}} ${{matrix.build.name}}
          path: |
            */bin/
            *\bin\*
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */bin/*
