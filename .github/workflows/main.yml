name: Wails build

on:
  push:
    tags:
      # Match any new tag
      - "*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  # 任务：创建 release 版本
  # create-release:
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-latest
  #   outputs:
  #     RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Create Release
  #       id: create_release
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')

  # 任务：构建
  build:
    permissions:
      contents: write
    # needs: create-release
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          # - name: "usb_list"
          #   platform: "linux/amd64"
          #   os: "ubuntu-latest"
          - name: "usb_list"
            platform: "windows/amd64"
            os: "windows-latest"
          # - name: "usb_list"
          #   platform: "darwin/amd64"
          #   os: "macos-latest"

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"

      - run: pnpm --version

      - uses: actions/setup-go@v5
        with:
          go-version: "stable" # The Go version to download (if necessary) and use.
      - run: |
          go env
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # ubuntu 安装依赖
      - name: install dependencies (ubuntu only)
        if: matrix.build.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libusb-1.0

      # macos 安装依赖
      - name: install dependencies (macos only)
        if: matrix.build.os == 'macos-latest'
        run: |
          brew install libusb

      # windows 安装依赖
      - name: install msys2 (windows only)
        if: matrix.build.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          # msystem: UCRT64
          update: true
          release: false

      - name: install dependencies (windows only)
        if: matrix.build.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm --needed mingw-w64-x86_64-gcc mingw-w64-x86_64-libusb mingw-w64-x86_64-pkg-config
          pkg-config --cflags libusb-1.0
          pkg-config --libs libusb-1.0

      # 编译
      - name: Build wails
        if: matrix.build.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          wails build --target ${{ matrix.build.platform }} -webview2 download

      # 发布 release
      - uses: actions/upload-artifact@v3
        with:
          name: Wails Build ${{runner.os}} ${{matrix.build.name}}
          path: |
            */bin/
            *\bin\*
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */bin/*
