on:
  push:
    tags:
      # Match any new tag
      - "v*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  APP_NAME: "usb_list"
  NODE_OPTIONS: "--max-old-space-size=4096"
  NODE_VERSION: "20"
  PNPM_VERSION: "8"
  GO_VERSION: "1.22"

permissions:
  contents: write
  packages: write

jobs:
  # 任务：构建
  build-linux:
    name: app build
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          [
            {
              name: "linux-amd64",
              platform: "linux/amd64",
              os: "ubuntu-latest",
            },
            {
              name: "linux-arm64",
              platform: "linux/arm64",
              os: "ubuntu-latest",
            },
            {
              name: "windows-amd64",
              platform: "windows/amd64",
              os: "windows-latest",
            },
            {
              name: "macos-amd64",
              platform: "darwin/amd64",
              os: "macos-latest",
            },
            {
              name: "macos-arm64",
              platform: "darwin/arm64",
              os: "macos-latest",
            },
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # ubuntu 安装依赖
      - name: install dependencies
        if: matrix.build.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config
          sudo apt-get install -y libusb-1.0 
          sudo apt-get install -y upx-ucl
          sudo apt-get install -y libgtk-3-dev
          sudo apt-get install -y libwebkit2gtk-4.0-dev
          echo 'export PATH=$PATH:/usr/bin/pkg-config' >> ~/.bashrc

      # 前端打包
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{env.PNPM_VERSION}}
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - name: Build WebUI
        run: |
          cd frontend
          pnpm install
          pnpm run build

      # go 后端编译
      - name: Wails Build
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          binary_name: ${{ env.APP_NAME }}
          pre_command: |
            go install github.com/wailsapp/wails/v2/cmd/wails@latest \n
            wails doctor
          build_command: wails build -s -upx -webview2=download
          build_flags: -platform=${{ matrix.build.platform }}
          ldflags: "-extldflags=-static -w -s"
          compress_assets: OFF
          goversion: ${{ env.GO_VERSION }}
