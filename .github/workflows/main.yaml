name: Wails build

on:
  push:
    tags:
      # Match any new tag
      - "v*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  APP_NAME: "usb_list"
  NODE_OPTIONS: "--max-old-space-size=4096"
  NODE_VERSION: "20"
  PNPM_VERSION: "8"
  GO_VERSION: "1.21.8"

jobs:
  build:
    permissions:
      contents: write
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          [
            {
              name: "windows-amd64",
              platform: "windows/amd64",
              os: "windows-latest",
            },
            {
              name: "linux-amd64",
              platform: "linux/amd64",
              os: "ubuntu-latest",
            },
            {
              name: "linux-arm64",
              platform: "linux/arm64",
              os: "ubuntu-latest",
            },
            { name: "darwin-amd64", platform: "darwin/amd64", os: "macos-13" },
            { name: "darwin-arm64", platform: "darwin/arm64", os: "macos-13" },
          ]

    runs-on: ${{ matrix.build.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # ubuntu 安装依赖
      - name: install dependencies (ubuntu only)
        if: matrix.build.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y libusb-1.0

      # macos 安装依赖
      - name: install dependencies (macos only)
        shell: bash
        if: matrix.build.os == 'macos-13'
        run: |
          brew install libusb

      # windows 安装依赖
      - name: install dependencies (windows only)
        if: matrix.build.os == 'windows-latest'
        shell: powershell
        run: |
          choco install libusbdotnet

      # 编译
      - name: Wails Build Action with upx
        uses: mikulicf/wails-build-action@v1.0.1
        with:
          build-name: ${{ env.APP_NAME }}
          build-platform: ${{matrix.build.platform}}
          go-version: ${{ env.GO_VERSION }}
          node-version: ${{ env.NODE_VERSION }}
          nsis: false
          ldflags: "-extldflags=-static -w -s"
