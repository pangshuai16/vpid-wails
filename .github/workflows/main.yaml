name: Wails build

on:
  push:
    tags:
      # Match any new tag
      - "v*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  APP_NAME: "usb_list"
  NODE_OPTIONS: "--max-old-space-size=4096"
  NODE_VERSION: "20"
  PNPM_VERSION: "8"
  GO_VERSION: "1.21.8"

jobs:
  build:
    permissions:
      contents: write
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build:
          [
            {
              name: "windows-amd64",
              platform: "windows/amd64",
              os: "windows-latest",
            },
            {
              name: "linux-amd64",
              platform: "linux/amd64",
              os: "ubuntu-latest",
            },
            {
              name: "linux-arm64",
              platform: "linux/arm64",
              os: "ubuntu-latest",
            },
            {
              name: "darwin-amd64",
              platform: "darwin/amd64",
              os: "macos-latest",
            },
            {
              name: "darwin-arm64",
              platform: "darwin/arm64",
              os: "macos-latest",
            },
          ]

    runs-on: ${{ matrix.build.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # ubuntu 安装依赖
      - name: install dependencies (ubuntu only)
        if: matrix.build.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential crossbuild-essential-arm64
          sudo apt-get install -y pkg-config
          sudo apt-get install -y libusb-1.0
          sudo apt-get install -y libgtk-3-dev
          sudo apt-get install -y libwebkit2gtk-4.0-dev
          sudo apt-get install -y upx-ucl
          pkg-config --cflags libusb-1.0
          pkg-config --libs libusb-1.0
          pkg-config --cflags libgtk-3.0
          pkg-config --libs libgtk-3.0
          pkg-config --cflags libwebkit2gtk-4.0
          pkg-config --libs libwebkit2gtk-4.0

      # macos 安装依赖
      - name: install dependencies (macos only)
        shell: bash
        if: matrix.build.os == 'macos-latest'
        run: |
          brew install gcc
          brew install pkg-config
          brew install libusb
          brew install upx

      # windows 安装依赖
      - name: install msys2 (windows only)
        if: matrix.build.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          release: false
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-upx
            mingw-w64-x86_64-libusb
      - name: set environment variables (windows only)
        if: matrix.build.os == 'windows-latest'
        shell: powershell
        run: |
          $env:Path+=";C:\msys64\usr\bin;C:\msys64\mingw64\bin;C:\msys64\mingw64\include"

      # 前端打包
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "frontend/pnpm-lock.yaml"
      - name: Build frontend
        run: |
          cd frontend
          pnpm install
          pnpm run build

      # 编译
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          pkg-config --cflags libusb-1.0
          pkg-config --libs libusb-1.0
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build wails (linux & macos)
        run: |
          echo "-------------"
          which wails
          echo "-------------"
          wails doctor
          wails build -s -upx -platform="${{ matrix.build.platform }}" -ldflags="-extldflags=-static -w -s" -o ${{ env.APP_NAME }}-${{matrix.build.name}}

      # 发布 release
      - uses: actions/upload-artifact@v3
        with:
          name: Wails Build ${{runner.os}} ${{matrix.build.name}}
          path: |
            */bin/
            *\bin\*
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */bin/*
