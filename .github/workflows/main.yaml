name: Wails build

on:
  push:
    tags:
      # Match any new tag
      - "v*"

env:
  # Necessary for most environments as build failure can occur due to OOM issues
  APP_NAME: "usb_list"
  NODE_OPTIONS: "--max-old-space-size=4096"
  NODE_VERSION: "20"
  PNPM_VERSION: "8"
  GO_VERSION: "1.21.8"

jobs:
  # 任务：创建 release 版本
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true

  build:
    needs: create-release
    permissions:
      contents: write
    strategy:
      # Failure in one platform build won't impact the others
      fail-fast: false
      matrix:
        build: [
            # {
            #   name: "windows-amd64",
            #   platform: "windows/amd64",
            #   os: "windows-latest",
            # },
            {
              name: "linux-amd64",
              platform: "linux/amd64",
              os: "ubuntu-latest",
            },
            { name: "darwin-amd64", platform: "darwin/amd64", os: "macos-13" },
            # {
            #   name: "linux-arm64",
            #   platform: "linux/arm64",
            #   os: "ubuntu-latest",
            # },
            # { name: "darwin-arm64", platform: "darwin/arm64", os: "macos-14" },
          ]

    runs-on: ${{ matrix.build.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # set dependencies (linux only)
      - name: install dependencies (ubuntu only)
        if: startsWith(matrix.build.platform,'linux')
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
          sudo apt-get install -y crossbuild-essential-arm64
          sudo apt-get install -y pkg-config
          sudo apt-get install -y libgtk-3-dev
          sudo apt-get install -y libwebkit2gtk-4.0-dev 
          sudo apt-get install -y libusb-1.0
          sudo apt-get install -y libusb-1.0-0-dev
          sudo apt-get install -y upx-ucl
          sudo apt-get install -y libudev-dev
          sudo apt-get install -y libc6-dev
          sudo ldconfig
          pkg-config --cflags --libs webkit2gtk-4.0

      # set dependencies (macos only)
      - name: install dependencies (macos only)
        if: startsWith(matrix.build.os,'macos')
        run: |
          brew install gcc
          brew install pkg-config
          brew install libusb
          brew install libusb-compat
          brew install upx
          brew install mitchellh/gon/gon

      # set dependencies (windows only)
      - name: install dependencies (windows only)
        if: startsWith(matrix.build.os,'windows')
        uses: msys2/setup-msys2@v2
        with:
          update: true
          release: false
          install: >
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-libusb
            mingw-w64-x86_64-upx

      # Build UI
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Build WebUI
        run: |
          cd frontend
          npm install
          npm run build

      # Build Wails
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Install Wails
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
      - name: Build Wails App (Linux)
        if: startsWith(matrix.build.platform,'linux')
        run: |
          pkg-config --cflags libusb-1.0
          pkg-config --libs libusb-1.0
          wails doctor
          wails build -s -trimpath --platform="${{matrix.build.platform}}" -o="${{ env.APP_NAME }}-${{ matrix.build.name }}" -ldflags="-extldflags=-static -s -w"
      - name: Build Wails App (macOS)
        if: startsWith(matrix.build.os,'macos')
        run: |
          pkg-config --cflags libusb-1.0
          pkg-config --libs libusb-1.0
          wails doctor
          wails build -s -trimpath --platform="${{matrix.build.platform}}" -o="${{ env.APP_NAME }}-${{ matrix.build.name }}" -ldflags="-extldflags=-static -s -w -r=/usr/local/Cellar"
      - name: Build Wails App (Windows)
        if: startsWith(matrix.build.os,'windows')
        shell: msys2 {0}
        run: |
          export PATH="/c/Users/runneradmin/go/bin:/c/hostedtoolcache/windows/go/${{ env.GO_VERSION }}/x64/bin:$PATH"
          wails doctor
          wails build -s -trimpath --platform "${{matrix.build.platform}}" -o="${{ env.APP_NAME }}-${{ matrix.build.name }}.exe" -ldflags="-extldflags=-static -s -w" -webview2="embed" -tags=native_webview2loader

      # Upload build assets
      - uses: actions/upload-artifact@v4
        with:
          name: Wails Build ${{ matrix.build.name }}
          path: |
            ./build/bin/*
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: "./build/bin/*"
